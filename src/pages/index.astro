---
// import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import BaseLayout from '../layouts/BaseLayout.astro';
// import CallToAction from '../components/CallToAction.astro';
// import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import Icon from '../components/Icon.astro';
import Pill from '../components/Pill.astro';
// import PortfolioPreview from '../components/PortfolioPreview.astro';
import ContactCTA from '../components/ContactCTA.astro';
import Skills from '../components/Skills.astro';
import WorkTimeline from '../components/WorkTimeline.astro';

// const projects = (await getCollection('work'))
//	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
//	.slice(0, 4);
---

<BaseLayout>
<head>
  <link rel="preload" href="/portfolio/assets/portrait.jpg" as="image">
</head>
	<div class="stack gap-20 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<header class="hero animate-on-scroll" style="--animation-delay: 0.2s">
			
				<Hero
					title="Hello, my name is Sergio Rodríguez Vázquez"
					tagline="Software Engineer specialized in AI/ML. Currently working in Barcelona, building tomorrow's applications."
					align="start"
					class="hero"
				>
					<div class="roles">
						<Pill><Icon icon="code" size="1.33em" /> Developer</Pill>
					</div>
				</Hero>

								<Image 
				src='/portfolio/assets/portrait.jpg' 
				width={480}
				height={620} 
				alt="Sergio Rodriguez smiling in restaurant"
				loading="eager"
				format="webp"
				quality={80}
				/>
			</header>

			<Skills class="skills animate-on-scroll" style="--animation-delay: 0.3s"/>
		</div>
			
		<main class="wrapper stack gap-20 lg:gap-48">
			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4 animate-on-scroll">
					<WorkTimeline class="animate-on-scroll" style="--animation-delay: 0.3s"/>
				</header>
			</section>
<!--
			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4 animate-on-scroll">
					<h3>Selected Work</h3>
					<p>Take a look below at some of my featured work for clients from the past few years.</p>
				</header>

				<div class="gallery">
					<Grid variant="offset">
						{
							projects.map((project, index) => (
								<li class="animate-on-scroll" style={`--animation-delay: ${0.2 * (index + 1)}s`}>
									<PortfolioPreview project={project} />
								</li>
							))
						}
					</Grid>
				</div>

				<div class="cta animate-on-scroll">
					<CallToAction href="/work/">
						View All
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
				</div>
			</section>

			<section class="section with-background bg-variant">
				<header class="section-header stack gap-2 lg:gap-4 animate-on-scroll">
					<h3>Mentions</h3>
					<p>
						I have been fortunate enough to receive praise for my work in several publications. Take
						a look below to learn more.
					</p>
				</header>

				<div class="gallery">
					<Grid variant="small">
						{
							['Medium', 'BuzzFeed', 'The Next Web', 'awwwards.', 'TechCrunch'].map((brand, index) => (
								<li class="mention-card animate-on-scroll" style={`--animation-delay: ${0.1 * (index + 1)}s`}>
									<p>{brand}</p>
								</li>
							))
						}
					</Grid>
				</div>
			</section> -->
		</main>

		<ContactCTA class="animate-on-scroll" style="--animation-delay: 0.3s" />
	</div>
</BaseLayout>

<script>
	// Intersection Observer setup
	const observerOptions = {
		root: null,
		rootMargin: '0px',
		threshold: 0.1
	};

	const observer = new IntersectionObserver((entries) => {
		entries.forEach(entry => {
			if (entry.isIntersecting) {
				entry.target.classList.add('animate');
				observer.unobserve(entry.target); // Stop observing once animation is triggered
			}
		});
	}, observerOptions);

	// Observe all elements with animate-on-scroll class
	document.addEventListener('DOMContentLoaded', () => {
		const elements = document.querySelectorAll('.animate-on-scroll');
		elements.forEach(el => observer.observe(el));
	});
</script>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: none;
	}

	.hero img {
		aspect-ratio: 5 / 4;
		object-fit: cover;
		object-position: top;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

		.hero img {
			aspect-ratio: 3 / 4;
			border-radius: 4.5rem;
			object-fit: cover;
		}
	}

	/* Section Styles */
	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);
		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/portfolio/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	/* Responsive Styles */
	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}

	/* Mention Card Styles */
	.mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}

	/* Animation Styles */
	.animate-on-scroll {
		opacity: 0;
		transform: translateY(20px);
		transition: opacity 0.5s ease-out, transform 0.5s ease-out;
		transition-delay: var(--animation-delay, 0s);
	}

	.animate-on-scroll.animate {
		opacity: 1;
		transform: translateY(0);
	}

	/* Disable animations if user prefers reduced motion */
	@media (prefers-reduced-motion: reduce) {
		.animate-on-scroll {
			transition: none;
			opacity: 1;
			transform: none;
		}
	}
</style>